你们好，我是该项目的创建者。任何相关的疑问可以发送邮件到nmbdc@live.cn。该项目最后一次成规模的变动是在半年之前，现在我也已经不再进行相关工作，所以很多问题对于我来说也构成问题。我会尽力解释我尚能理解的部分。

在博弈论这个问题上我是半路出家，前后没有经过正式的授课且只有一年多的学习经验，所以这份源代码中会包含一些数学原理上的错误。如果今后有此类疑惑，直接根据判断着手修改或重写即可。

这个项目在我这里只是断断续续地进行了一个多学期（正式的），加之水平有限，所以这份源代码中会包含一些不正常的逻辑。如果今后有此类疑惑，直接根据判断着手重写即可。

这个项目中还包含了一些比较“自由”的源代码（两到三处，使用了奇怪的命名），这些问题本身的逻辑十分复杂，并且在摸索地实现完成后由于某些原因没有及时整理。它们虽然能够通过简单的测试，但如果对此有疑惑则可直接重写，因为它们无法被解释。

项目目前使用Lua54-b/C并有一些模式，但对于我来说印象已经模糊，如果存在疑惑，可参阅Lua手册或根据判断重构为习惯的语言与模式。源代码有注释说明，但它们尚未经过系统性的整理与检查。

所有源代码只经过初步的测试，没有成规模的系统性测试。

具体的输入内容可结合代码参照文章与示例（示例博弈为规则体现，没有实际意义），已有的输出可以参照文章。

田老师手里有该项目相关的演示文稿与文章，这些文件能够说明该项目目前的构成情况。这里有一些额外的情况需要说明：
一、最后选定的输入格式是序列化的Lua表文件，只是因为这很好用也很好实现。但是出于实用性考虑，曾经选定的输入格式是十分通行的TOML与YAML文件。其中TOML不支持非同质列表，我的解决方案是改写已有Lua的TOML支持模块来支持，但这相当于修改了TOML标准，所以目前对于TOML的支持等同于不完整。鉴于此，该项目目前在复杂博弈中不测试TOML，如计划完全支持可能需要额外的设计工作
二、均衡计算开始选取的是Gambit，但是Gambit以其庞大复杂的构成却不提供清晰的代码接口，对于Gambit的支持是建立在针对每一个均衡计算方法的代码提取、修改、编译、再绑定的流程之上（当然也可以使用文件系统进行进程间的交流，完全可行）。相比较而言，GameTracer构成简单，流程中的每一步都可以轻松完成，所以目前版本只包含对于GameTracer的绑定实现（实际上Gambit包含不稳定的GameTracer实现）。Gambit绑定有一个示例性实现作为保留，因为它很优秀也完全可用，但由于某些原因部分遗失
三、随机博弈原型，尚欠缺功能（建议细分为下属博弈类型再实现分析计算等功能，随机博弈过于复杂）

最后，这里包含的内容并非该项目的全部内容。项目外围文件与最近的源代码由于疫情与设备损坏问题可能丢失（原存留于广州），优先考虑重建它们中的部分内容：
一、Gambit绑定在C++一侧的实现（同理于GameTracer）
二、经过修改的Gambit源代码以及其编译（删减性修改，基础性编译）
三、经过修改的GameTracer源代码以及其编译（结构性修改，请注意Gambit与GameTracer对于回报矩阵的规定不同，该项目大致跟随Gambit；基础性编译）
四、项目工作目录结构
五、其它历史性代码保存（作为思路存留，其中大多与目前版本不再适配）
六、经过修改的luatoml模块（非同质列表支持）
七、部分随机博弈相关代码

如计划发布，请注意Gambit与GamTracer使用具有感染性的GNU GENERAL PUBLIC LICENSE Version 2。

2020年6月15日
